-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module PortfolioData.Object.Experience_classifications exposing (classification, experience, experience_id, tag_id)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import PortfolioData.InputObject
import PortfolioData.Interface
import PortfolioData.Object
import PortfolioData.Scalar
import PortfolioData.ScalarCodecs
import PortfolioData.Union


{-| An object relationship
-}
classification : SelectionSet decodesTo PortfolioData.Object.Classifications -> SelectionSet decodesTo PortfolioData.Object.Experience_classifications
classification object_ =
    Object.selectionForCompositeField "classification" [] object_ identity


{-| An object relationship
-}
experience : SelectionSet decodesTo PortfolioData.Object.Experiences -> SelectionSet decodesTo PortfolioData.Object.Experience_classifications
experience object_ =
    Object.selectionForCompositeField "experience" [] object_ identity


experience_id : SelectionSet Int PortfolioData.Object.Experience_classifications
experience_id =
    Object.selectionForField "Int" "experience_id" [] Decode.int


tag_id : SelectionSet Int PortfolioData.Object.Experience_classifications
tag_id =
    Object.selectionForField "Int" "tag_id" [] Decode.int
